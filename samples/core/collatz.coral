func printf:Void (x:Ptr, ...)

### Collatz
func collatz: Int64(n: Int64):
  if n = 1: 0
  else if 0 = n % 2: 1 + collatz (n / 2)
  else: 1 + collatz (1 + n * 3)

func collatz_loop (a, b):
  if a < b:
    printf ("%d ", collatz a)
    collatz_loop (a + 1, b)
collatz_loop(2, 20)
printf "\n"

### Fizzbuzz
func fizzbuzz(n):
  if 0 = n % 15: printf("fizzbuzz ")
  else if 0 = n % 5: printf("buzz ")
  else if 0 = n % 3: printf("fizz ")
  else: printf("%d ", n)

func fizzbuzz_loop:Void (a: Int64, n:Int64):
  if a < n:
    fizzbuzz a
    fizzbuzz_loop(a + 1, n)
fizzbuzz_loop(1, 16)

### Fibonacci
func fibonacci: Int64(n: Int64):
  if n < 2: 1
  else: fibonacci(n - 1) + fibonacci(n - 2)

func fibonacci_loop:Void (a: Int64, n:Int64):
  if a < n:
    printf("%ld ", fibonacci a)
    fibonacci_loop(a + 1, n)
printf "\nfibonacci:  "
fibonacci_loop(0, 15)

### Factorial
func factorial: Int64(n:Int64):
  if n < 2: 1
  else: n * factorial(n - 1)

func factorial_loop:Void (a: Int64, n:Int64):
  if a < n:
    printf("%ld ", factorial a)
    factorial_loop(a + 1, n)

printf "\nfactorial:  "
factorial_loop(1, 13)
