# Ad-hoc Polymorphism Test
#   "ad-hoc" (Latin): "for this particular purpose"
#   Specify type-specific overloads for a function
func printf: Void (fmt:String, ...)

# Regular overloading on parameter type
func print(s:Float64):
  printf("Float64: %g\n", s)
func print(s:Int64):
  printf("Int64: %ld\n", s)
func print(s:String):
  printf("String: %s\n", s)

print 3
print "4"
print 6.6

# Dependent return types on overloads
func process(s:Float64):
  "floats return a string"
func process(s:Int64):
  123.4567

printf("Process: %g -> %s\n", 2.3, process 2.3)
printf("Process: %d -> %g\n", 2, process 2)
printf("Process: %d --> %s\n", 2, process(process 2))
